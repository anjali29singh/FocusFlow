{"ast":null,"code":"var _jsxFileName = \"/home/anjali/projects/FocusFlow/src/components/Meditation/Meditation.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./meditation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meditation = () => {\n  _s();\n  const inhale = localStorage.getItem(\"zenInhalation\");\n  const exhale = localStorage.getItem(\"zenExhalation\");\n  const inhaleHold = localStorage.getItem(\"zenInhaleHold\");\n  const exhaleHold = localStorage.getItem(\"zenExhaleHold\");\n  let smallScreen = window.matchMedia(\"(max-device-width: 600px)\").matches || window.innerWidth <= 600;\n  const RADIUS = {\n    initial: smallScreen ? 100 : 120,\n    expanded: smallScreen ? 150 : 220\n  };\n  const [radius, setRadius] = React.useState(RADIUS.initial);\n  const addAnimation = (element, name, duration, newRadius) => {\n    element.style.animationDuration = `${duration}s`;\n    element.style.animationName = name;\n    setRadius(newRadius);\n  };\n  React.useEffect(() => {\n    const meditationSvg = document.querySelector(\"#meditation-circle-bar\");\n    const label = document.querySelector(\"#breath-label p\");\n    const animationHandler = () => {\n      meditationSvg.style.animationName === \"inhale\" ? inhaleHold > 0 ? holdAnimation(exhaleAnimation, inhaleHold) : exhaleAnimation() : exhaleHold > 0 ? holdAnimation(inhaleAnimation, exhaleHold) : inhaleAnimation();\n    };\n    function inhaleAnimation() {\n      label.innerText = \"Breathe In\";\n      addAnimation(meditationSvg, \"inhale\", inhale, RADIUS.expanded);\n    }\n    function exhaleAnimation() {\n      label.innerText = \"Breathe Out\";\n      addAnimation(meditationSvg, \"exhale\", exhale, RADIUS.initial);\n    }\n    function holdAnimation(callback, hold) {\n      label.innerText = \"Hold\";\n      setTimeout(() => {\n        callback();\n      }, hold * 1000);\n    }\n    inhaleAnimation();\n    meditationSvg.addEventListener(\"animationend\", animationHandler);\n    return () => {\n      meditationSvg.removeEventListener(\"animationend\", animationHandler);\n    };\n  }, []); //eslint-disable-line\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-container\",\n    id: \"meditation-display\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"breath-label\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Breathe In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"meditation-svg\",\n        width: \"200\",\n        height: \"200\",\n        version: \"1.1\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"circle\", {\n          id: \"meditation-circle-bar\",\n          r: radius,\n          cx: \"100\",\n          cy: \"100\",\n          fill: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Meditation, \"eE2ymmxCDPpFf+Gj0+7Le/+onwk=\");\n_c = Meditation;\nexport default Meditation;\nvar _c;\n$RefreshReg$(_c, \"Meditation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Meditation","_s","inhale","localStorage","getItem","exhale","inhaleHold","exhaleHold","smallScreen","window","matchMedia","matches","innerWidth","RADIUS","initial","expanded","radius","setRadius","useState","addAnimation","element","name","duration","newRadius","style","animationDuration","animationName","useEffect","meditationSvg","document","querySelector","label","animationHandler","holdAnimation","exhaleAnimation","inhaleAnimation","innerText","callback","hold","setTimeout","addEventListener","removeEventListener","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","version","xmlns","r","cx","cy","fill","_c","$RefreshReg$"],"sources":["/home/anjali/projects/FocusFlow/src/components/Meditation/Meditation.js"],"sourcesContent":["import React from \"react\";\n\nimport \"./meditation.css\";\n\nconst Meditation = () => {\n  const inhale = localStorage.getItem(\"zenInhalation\");\n  const exhale = localStorage.getItem(\"zenExhalation\");\n  const inhaleHold = localStorage.getItem(\"zenInhaleHold\");\n  const exhaleHold = localStorage.getItem(\"zenExhaleHold\");\n\n  let smallScreen =\n    window.matchMedia(\"(max-device-width: 600px)\").matches ||\n    window.innerWidth <= 600;\n\n  const RADIUS = {\n    initial: smallScreen ? 100 : 120,\n    expanded: smallScreen ? 150 : 220,\n  };\n\n  const [radius, setRadius] = React.useState(RADIUS.initial);\n\n  const addAnimation = (element, name, duration, newRadius) => {\n    element.style.animationDuration = `${duration}s`;\n    element.style.animationName = name;\n    setRadius(newRadius);\n  };\n\n  React.useEffect(() => {\n    const meditationSvg = document.querySelector(\"#meditation-circle-bar\");\n    const label = document.querySelector(\"#breath-label p\");\n\n    const animationHandler = () => {\n      meditationSvg.style.animationName === \"inhale\"\n        ? inhaleHold > 0\n          ? holdAnimation(exhaleAnimation, inhaleHold)\n          : exhaleAnimation()\n        : exhaleHold > 0\n        ? holdAnimation(inhaleAnimation, exhaleHold)\n        : inhaleAnimation();\n    };\n\n    function inhaleAnimation() {\n      label.innerText = \"Breathe In\";\n      addAnimation(meditationSvg, \"inhale\", inhale, RADIUS.expanded);\n    }\n\n    function exhaleAnimation() {\n      label.innerText = \"Breathe Out\";\n      addAnimation(meditationSvg, \"exhale\", exhale, RADIUS.initial);\n    }\n\n    function holdAnimation(callback, hold) {\n      label.innerText = \"Hold\";\n\n      setTimeout(() => {\n        callback();\n      }, hold * 1000);\n    }\n\n    inhaleAnimation();\n\n    meditationSvg.addEventListener(\"animationend\", animationHandler);\n\n    return () => {\n      meditationSvg.removeEventListener(\"animationend\", animationHandler);\n    };\n  }, []); //eslint-disable-line\n\n  return (\n    <div className=\"timer-container\" id=\"meditation-display\">\n      <div className=\"widget\">\n        <div id=\"breath-label\">\n          <p>Breathe In</p>\n        </div>\n        <svg\n          id=\"meditation-svg\"\n          width=\"200\"\n          height=\"200\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle\n            id=\"meditation-circle-bar\"\n            r={radius}\n            cx=\"100\"\n            cy=\"100\"\n            fill=\"transparent\"\n          ></circle>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default Meditation;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}