{"ast":null,"code":"var _jsxFileName = \"/home/anjali/projects/FocusFlow/src/components/Timer/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Countdown from \"./Countdown/Countdown\";\nimport Progressbar from \"./Progressbar/Progressbar\";\nimport BreakMenu from \"./BreakMenu/BreakMenu\";\nimport \"./timer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  hidden,\n  reset,\n  setIntervalCount,\n  intervalCount,\n  skip,\n  setSkip,\n  openMeditation\n}) => {\n  _s();\n  const [timer, setTimer] = useState(null);\n  const [time, setTime] = useState((localStorage.getItem(\"zenIntervalLength\") || 25) * 60);\n  const [intervalTime, setIntervalTime] = useState((localStorage.getItem(\"zenIntervalLength\") || 25) * 60);\n  const [isPaused, setIsPaused] = useState(true);\n  const [isBreak, setIsBreak] = useState(false);\n  const [startInterval, setStartInterval] = useState(false);\n  const [showBreakTimer, setShowBreakTimer] = useState(true);\n  const [currentInterval, setCurrentInterval] = useState(\"zenIntervalLength\");\n  const [sound, setSound] = useState();\n  const startBreak = () => {\n    setShowBreakTimer(true);\n    setIsPaused(false);\n    setStartInterval(true);\n  };\n  const countDown = () => {\n    setTime(time => time - 1);\n  };\n  const startTimer = () => {\n    setTimer(setInterval(countDown, 1000));\n  };\n  const stopTimer = () => {\n    clearInterval(timer);\n  };\n  const startStop = () => {\n    isPaused ? startTimer() : stopTimer();\n    setIsPaused(!isPaused);\n    setStartInterval(true);\n  };\n  const showTime = () => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time % 60;\n    return `${minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\n  };\n  useEffect(() => {\n    if (!localStorage.getItem(\"zenInhaleHold\")) {\n      localStorage.setItem(\"zenIntervalLength\", 25);\n      localStorage.setItem(\"zenShortBreak\", 5);\n      localStorage.setItem(\"zenLongBreak\", 20);\n      localStorage.setItem(\"zenInhalation\", 4);\n      localStorage.setItem(\"zenExhalation\", 4);\n      localStorage.setItem(\"zenInhaleHold\", 4);\n      localStorage.setItem(\"zenExhaleHold\", 4);\n    }\n    let audio = new Audio(\"https://github.com/Schlenges/uploads/blob/main/zapsplat_multimedia_notification_alert_prompt_bright_chime_ping_001_42408.mp3?raw=true\");\n    audio.type = \"audio/mpeg\";\n    audio.volume = 0.2;\n    setSound(audio);\n  }, []);\n  useEffect(() => {\n    if (time <= 0) {\n      stopTimer();\n      sound.play();\n      setTimeout(() => {\n        setIsPaused(true);\n        setIsBreak(!isBreak);\n      }, 1000);\n    }\n  }, [time]); //eslint-disable-line\n\n  useEffect(() => {\n    let interval;\n    if (isBreak === false) {\n      setIntervalCount(intervalCount => intervalCount + 1);\n      interval = \"zenIntervalLength\";\n    } else {\n      setShowBreakTimer(false);\n      interval = intervalCount < 4 ? \"zenShortBreak\" : \"zenLongBreak\";\n    }\n    setCurrentInterval(interval);\n  }, [isBreak]); //eslint-disable-line\n\n  useEffect(() => {\n    if (!showBreakTimer && isBreak) {\n      return;\n    }\n    let intervalTime = localStorage.getItem(currentInterval);\n    setIntervalTime(intervalTime);\n    stopTimer();\n    setTime(intervalTime * 60);\n    isBreak ? setTimeout(() => startTimer(), 500) : setIsPaused(true);\n  }, [reset]); //eslint-disable-line\n\n  useEffect(() => {\n    if (skip) {\n      stopTimer();\n      setIsPaused(true);\n      currentInterval !== \"zenIntervalLength\" ? setIsBreak(false) : setIsBreak(true);\n      setSkip(false);\n    }\n  }, [skip]); //eslint-disable-line\n\n  useEffect(() => {\n    let intervalTime = localStorage.getItem(currentInterval) || 25;\n    setIntervalTime(intervalTime);\n    setTime(intervalTime * 60);\n  }, [currentInterval]);\n  useEffect(() => {\n    if (showBreakTimer && isBreak) {\n      startTimer();\n    }\n  }, [showBreakTimer]); //eslint-disable-line\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"timer\",\n    className: \"timer-container\",\n    style: {\n      visibility: hidden ? \"hidden\" : \"visible\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"widget\",\n      children: [!showBreakTimer && isBreak ? /*#__PURE__*/_jsxDEV(BreakMenu, {\n        startBreak: startBreak,\n        openMeditation: openMeditation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Countdown, {\n        showTime: showTime,\n        isPaused: isPaused,\n        startStop: startStop,\n        isBreak: isBreak\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Progressbar, {\n        initial: intervalTime,\n        time: time,\n        isPaused: isPaused,\n        startInterval: startInterval,\n        setStartInterval: setStartInterval,\n        reset: reset,\n        skip: skip,\n        isBreak: isBreak\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"TtGtbz1hX6ebINJjL1KQEWDdMRE=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Countdown","Progressbar","BreakMenu","jsxDEV","_jsxDEV","Timer","hidden","reset","setIntervalCount","intervalCount","skip","setSkip","openMeditation","_s","timer","setTimer","time","setTime","localStorage","getItem","intervalTime","setIntervalTime","isPaused","setIsPaused","isBreak","setIsBreak","startInterval","setStartInterval","showBreakTimer","setShowBreakTimer","currentInterval","setCurrentInterval","sound","setSound","startBreak","countDown","startTimer","setInterval","stopTimer","clearInterval","startStop","showTime","minutes","Math","floor","seconds","setItem","audio","Audio","type","volume","play","setTimeout","interval","id","className","style","visibility","children","fileName","_jsxFileName","lineNumber","columnNumber","initial","_c","$RefreshReg$"],"sources":["/home/anjali/projects/FocusFlow/src/components/Timer/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Countdown from \"./Countdown/Countdown\";\nimport Progressbar from \"./Progressbar/Progressbar\";\nimport BreakMenu from \"./BreakMenu/BreakMenu\";\n\nimport \"./timer.css\";\n\nconst Timer = ({\n  hidden,\n  reset,\n  setIntervalCount,\n  intervalCount,\n  skip,\n  setSkip,\n  openMeditation,\n}) => {\n  const [timer, setTimer] = useState(null);\n  const [time, setTime] = useState(\n    (localStorage.getItem(\"zenIntervalLength\") || 25) * 60\n  );\n  const [intervalTime, setIntervalTime] = useState(\n    (localStorage.getItem(\"zenIntervalLength\") || 25) * 60\n  );\n  const [isPaused, setIsPaused] = useState(true);\n  const [isBreak, setIsBreak] = useState(false);\n  const [startInterval, setStartInterval] = useState(false);\n  const [showBreakTimer, setShowBreakTimer] = useState(true);\n  const [currentInterval, setCurrentInterval] = useState(\"zenIntervalLength\");\n  const [sound, setSound] = useState();\n\n  const startBreak = () => {\n    setShowBreakTimer(true);\n    setIsPaused(false);\n    setStartInterval(true);\n  };\n\n  const countDown = () => {\n    setTime((time) => time - 1);\n  };\n\n  const startTimer = () => {\n    setTimer(setInterval(countDown, 1000));\n  };\n\n  const stopTimer = () => {\n    clearInterval(timer);\n  };\n\n  const startStop = () => {\n    isPaused ? startTimer() : stopTimer();\n    setIsPaused(!isPaused);\n    setStartInterval(true);\n  };\n\n  const showTime = () => {\n    let minutes = Math.floor(time / 60);\n    let seconds = time % 60;\n\n    return `${minutes}:${seconds < 10 ? `0${seconds}` : seconds}`;\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"zenInhaleHold\")) {\n      localStorage.setItem(\"zenIntervalLength\", 25);\n      localStorage.setItem(\"zenShortBreak\", 5);\n      localStorage.setItem(\"zenLongBreak\", 20);\n      localStorage.setItem(\"zenInhalation\", 4);\n      localStorage.setItem(\"zenExhalation\", 4);\n      localStorage.setItem(\"zenInhaleHold\", 4);\n      localStorage.setItem(\"zenExhaleHold\", 4);\n    }\n\n    let audio = new Audio(\n      \"https://github.com/Schlenges/uploads/blob/main/zapsplat_multimedia_notification_alert_prompt_bright_chime_ping_001_42408.mp3?raw=true\"\n    );\n    audio.type = \"audio/mpeg\";\n    audio.volume = 0.2;\n    setSound(audio);\n  }, []);\n\n  useEffect(() => {\n    if (time <= 0) {\n      stopTimer();\n      sound.play();\n\n      setTimeout(() => {\n        setIsPaused(true);\n        setIsBreak(!isBreak);\n      }, 1000);\n    }\n  }, [time]); //eslint-disable-line\n\n  useEffect(() => {\n    let interval;\n\n    if (isBreak === false) {\n      setIntervalCount((intervalCount) => intervalCount + 1);\n      interval = \"zenIntervalLength\";\n    } else {\n      setShowBreakTimer(false);\n      interval = intervalCount < 4 ? \"zenShortBreak\" : \"zenLongBreak\";\n    }\n\n    setCurrentInterval(interval);\n  }, [isBreak]); //eslint-disable-line\n\n  useEffect(() => {\n    if (!showBreakTimer && isBreak) {\n      return;\n    }\n\n    let intervalTime = localStorage.getItem(currentInterval);\n    setIntervalTime(intervalTime);\n\n    stopTimer();\n    setTime(intervalTime * 60);\n\n    isBreak ? setTimeout(() => startTimer(), 500) : setIsPaused(true);\n  }, [reset]); //eslint-disable-line\n\n  useEffect(() => {\n    if (skip) {\n      stopTimer();\n      setIsPaused(true);\n\n      currentInterval !== \"zenIntervalLength\"\n        ? setIsBreak(false)\n        : setIsBreak(true);\n\n      setSkip(false);\n    }\n  }, [skip]); //eslint-disable-line\n\n  useEffect(() => {\n    let intervalTime = localStorage.getItem(currentInterval) || 25;\n    setIntervalTime(intervalTime);\n    setTime(intervalTime * 60);\n  }, [currentInterval]);\n\n  useEffect(() => {\n    if (showBreakTimer && isBreak) {\n      startTimer();\n    }\n  }, [showBreakTimer]); //eslint-disable-line\n\n  return (\n    <div\n      id=\"timer\"\n      className=\"timer-container\"\n      style={{ visibility: hidden ? \"hidden\" : \"visible\" }}\n    >\n      <div className=\"widget\">\n        {!showBreakTimer && isBreak ? (\n          <BreakMenu startBreak={startBreak} openMeditation={openMeditation} />\n        ) : (\n          <Countdown\n            showTime={showTime}\n            isPaused={isPaused}\n            startStop={startStop}\n            isBreak={isBreak}\n          />\n        )}\n        <Progressbar\n          initial={intervalTime}\n          time={time}\n          isPaused={isPaused}\n          startInterval={startInterval}\n          setStartInterval={setStartInterval}\n          reset={reset}\n          skip={skip}\n          isBreak={isBreak}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}