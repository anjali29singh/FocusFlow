{"ast":null,"code":"var _jsxFileName = \"/home/anjali/projects/FocusFlow/src/components/Soundscapes/Soundscapes.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport SoundOption from \"./SoundOption\";\nimport \"./soundscapes.css\";\nimport soundData from \"../../soundData.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Soundscapes = ({\n  hideIcons\n}) => {\n  _s();\n  const [showSounds, setShowSounds] = useState(false);\n  const [sounds, setSounds] = useState({});\n  const [selectedSounds, setSelectedSounds] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n  useEffect(() => {\n    Object.values(soundData).forEach(sound => sound[\"audio\"] = createAudio(sound.id, sound.src, sound.type));\n    setSounds(soundData);\n  }, []); //eslint-disable-line\n\n  useEffect(() => {\n    if (hideIcons) {\n      setShowSounds(false);\n    }\n  }, [hideIcons]);\n  const createAudio = (id, source, type) => {\n    let audio = new Audio(source);\n    audio.type = type;\n    audio.loop = true;\n    audio.volume = 0.5;\n    audio.onplaying = () => document.getElementById(id).classList.add(\"active\");\n    audio.onpause = () => document.getElementById(id).classList.remove(\"active\");\n    return audio;\n  };\n  const muteToggle = () => {\n    document.getElementById(\"mute\").classList.toggle(\"active\");\n    selectedSounds.forEach(id => {\n      if (Object.values(sounds).filter(({\n        id: soundId\n      }) => soundId === id)[0].audio.volume > 0) {\n        togglePlay(id);\n      } else {\n        toggleSelect(id);\n      }\n    });\n    setIsMuted(!isMuted);\n  };\n  const toggleSound = id => {\n    if (!isMuted) {\n      togglePlay(id);\n      toggleSelect(id);\n    }\n  };\n  const togglePlay = id => {\n    let [sound] = Object.values(sounds).filter(({\n      id: soundId\n    }) => soundId === id);\n    let audio = sound.audio;\n    audio.paused ? audio.play() : audio.pause();\n  };\n  const toggleSelect = id => {\n    setSelectedSounds(selectedSounds => selectedSounds.includes(id) ? selectedSounds.filter(sound => sound !== id) : [...selectedSounds, id]);\n  };\n  const controlVolume = (vol, id) => {\n    let [sound] = Object.values(sounds).filter(({\n      id: soundId\n    }) => soundId === id);\n    let value = Number(vol);\n    sound.audio.volume = value / 10;\n    if (value > 0 && sound.audio.paused) {\n      toggleSound(id);\n    }\n    if (value === 0 && !sound.audio.paused) {\n      toggleSound(id);\n    }\n    setSounds(sounds);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      id: \"sounds\",\n      className: \"icon\",\n      icon: \"fluent:headphones-sound-wave-20-filled\",\n      height: 30,\n      onClick: () => setShowSounds(!showSounds)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"soundsContainer\",\n      style: {\n        visibility: showSounds ? \"visible\" : \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        id: \"mute\",\n        className: \"sounds icon\",\n        icon: \"carbon:volume-mute\",\n        height: 20,\n        onClick: () => muteToggle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), Object.values(sounds).map(sound => /*#__PURE__*/_jsxDEV(SoundOption, {\n        sound: sound,\n        toggleSound: toggleSound,\n        controlVolume: controlVolume,\n        isMuted: isMuted\n      }, sound.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Soundscapes, \"zpENZNTa3rgj/vKtg6x2dtrpWyI=\");\n_c = Soundscapes;\nexport default Soundscapes;\nvar _c;\n$RefreshReg$(_c, \"Soundscapes\");","map":{"version":3,"names":["React","useState","useEffect","Icon","SoundOption","soundData","jsxDEV","_jsxDEV","Soundscapes","hideIcons","_s","showSounds","setShowSounds","sounds","setSounds","selectedSounds","setSelectedSounds","isMuted","setIsMuted","Object","values","forEach","sound","createAudio","id","src","type","source","audio","Audio","loop","volume","onplaying","document","getElementById","classList","add","onpause","remove","muteToggle","toggle","filter","soundId","togglePlay","toggleSelect","toggleSound","paused","play","pause","includes","controlVolume","vol","value","Number","children","className","icon","height","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","visibility","map","_c","$RefreshReg$"],"sources":["/home/anjali/projects/FocusFlow/src/components/Soundscapes/Soundscapes.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport SoundOption from \"./SoundOption\";\nimport \"./soundscapes.css\";\n\nimport soundData from \"../../soundData.js\";\n\nconst Soundscapes = ({ hideIcons }) => {\n  const [showSounds, setShowSounds] = useState(false);\n  const [sounds, setSounds] = useState({});\n  const [selectedSounds, setSelectedSounds] = useState([]);\n  const [isMuted, setIsMuted] = useState(false);\n\n  useEffect(() => {\n    Object.values(soundData).forEach(\n      (sound) => (sound[\"audio\"] = createAudio(sound.id, sound.src, sound.type))\n    );\n    setSounds(soundData);\n  }, []); //eslint-disable-line\n\n  useEffect(() => {\n    if (hideIcons) {\n      setShowSounds(false);\n    }\n  }, [hideIcons]);\n\n  const createAudio = (id, source, type) => {\n    let audio = new Audio(source);\n    audio.type = type;\n    audio.loop = true;\n    audio.volume = 0.5;\n    audio.onplaying = () => document.getElementById(id).classList.add(\"active\");\n    audio.onpause = () =>\n      document.getElementById(id).classList.remove(\"active\");\n    return audio;\n  };\n\n  const muteToggle = () => {\n    document.getElementById(\"mute\").classList.toggle(\"active\");\n    selectedSounds.forEach((id) => {\n      if (\n        Object.values(sounds).filter(({ id: soundId }) => soundId === id)[0]\n          .audio.volume > 0\n      ) {\n        togglePlay(id);\n      } else {\n        toggleSelect(id);\n      }\n    });\n    setIsMuted(!isMuted);\n  };\n\n  const toggleSound = (id) => {\n    if (!isMuted) {\n      togglePlay(id);\n      toggleSelect(id);\n    }\n  };\n\n  const togglePlay = (id) => {\n    let [sound] = Object.values(sounds).filter(\n      ({ id: soundId }) => soundId === id\n    );\n    let audio = sound.audio;\n\n    audio.paused ? audio.play() : audio.pause();\n  };\n\n  const toggleSelect = (id) => {\n    setSelectedSounds((selectedSounds) =>\n      selectedSounds.includes(id)\n        ? selectedSounds.filter((sound) => sound !== id)\n        : [...selectedSounds, id]\n    );\n  };\n\n  const controlVolume = (vol, id) => {\n    let [sound] = Object.values(sounds).filter(\n      ({ id: soundId }) => soundId === id\n    );\n    let value = Number(vol);\n    sound.audio.volume = value / 10;\n\n    if (value > 0 && sound.audio.paused) {\n      toggleSound(id);\n    }\n\n    if (value === 0 && !sound.audio.paused) {\n      toggleSound(id);\n    }\n\n    setSounds(sounds);\n  };\n\n  return (\n    <div>\n      <Icon\n        id=\"sounds\"\n        className=\"icon\"\n        icon=\"fluent:headphones-sound-wave-20-filled\"\n        height={30}\n        onClick={() => setShowSounds(!showSounds)}\n      />\n      <div\n        id=\"soundsContainer\"\n        style={{ visibility: showSounds ? \"visible\" : \"hidden\" }}\n      >\n        <Icon\n          id=\"mute\"\n          className=\"sounds icon\"\n          icon=\"carbon:volume-mute\"\n          height={20}\n          onClick={() => muteToggle()}\n        />\n        {Object.values(sounds).map((sound) => (\n          <SoundOption\n            key={sound.id}\n            sound={sound}\n            toggleSound={toggleSound}\n            controlVolume={controlVolume}\n            isMuted={isMuted}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Soundscapes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,gBAAgB;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,mBAAmB;AAE1B,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACdiB,MAAM,CAACC,MAAM,CAACf,SAAS,CAAC,CAACgB,OAAO,CAC7BC,KAAK,IAAMA,KAAK,CAAC,OAAO,CAAC,GAAGC,WAAW,CAACD,KAAK,CAACE,EAAE,EAAEF,KAAK,CAACG,GAAG,EAAEH,KAAK,CAACI,IAAI,CAC1E,CAAC;IACDZ,SAAS,CAACT,SAAS,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERH,SAAS,CAAC,MAAM;IACd,IAAIO,SAAS,EAAE;MACbG,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,MAAMc,WAAW,GAAGA,CAACC,EAAE,EAAEG,MAAM,EAAED,IAAI,KAAK;IACxC,IAAIE,KAAK,GAAG,IAAIC,KAAK,CAACF,MAAM,CAAC;IAC7BC,KAAK,CAACF,IAAI,GAAGA,IAAI;IACjBE,KAAK,CAACE,IAAI,GAAG,IAAI;IACjBF,KAAK,CAACG,MAAM,GAAG,GAAG;IAClBH,KAAK,CAACI,SAAS,GAAG,MAAMC,QAAQ,CAACC,cAAc,CAACV,EAAE,CAAC,CAACW,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAC3ER,KAAK,CAACS,OAAO,GAAG,MACdJ,QAAQ,CAACC,cAAc,CAACV,EAAE,CAAC,CAACW,SAAS,CAACG,MAAM,CAAC,QAAQ,CAAC;IACxD,OAAOV,KAAK;EACd,CAAC;EAED,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvBN,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,SAAS,CAACK,MAAM,CAAC,QAAQ,CAAC;IAC1DzB,cAAc,CAACM,OAAO,CAAEG,EAAE,IAAK;MAC7B,IACEL,MAAM,CAACC,MAAM,CAACP,MAAM,CAAC,CAAC4B,MAAM,CAAC,CAAC;QAAEjB,EAAE,EAAEkB;MAAQ,CAAC,KAAKA,OAAO,KAAKlB,EAAE,CAAC,CAAC,CAAC,CAAC,CACjEI,KAAK,CAACG,MAAM,GAAG,CAAC,EACnB;QACAY,UAAU,CAACnB,EAAE,CAAC;MAChB,CAAC,MAAM;QACLoB,YAAY,CAACpB,EAAE,CAAC;MAClB;IACF,CAAC,CAAC;IACFN,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;EAED,MAAM4B,WAAW,GAAIrB,EAAE,IAAK;IAC1B,IAAI,CAACP,OAAO,EAAE;MACZ0B,UAAU,CAACnB,EAAE,CAAC;MACdoB,YAAY,CAACpB,EAAE,CAAC;IAClB;EACF,CAAC;EAED,MAAMmB,UAAU,GAAInB,EAAE,IAAK;IACzB,IAAI,CAACF,KAAK,CAAC,GAAGH,MAAM,CAACC,MAAM,CAACP,MAAM,CAAC,CAAC4B,MAAM,CACxC,CAAC;MAAEjB,EAAE,EAAEkB;IAAQ,CAAC,KAAKA,OAAO,KAAKlB,EACnC,CAAC;IACD,IAAII,KAAK,GAAGN,KAAK,CAACM,KAAK;IAEvBA,KAAK,CAACkB,MAAM,GAAGlB,KAAK,CAACmB,IAAI,CAAC,CAAC,GAAGnB,KAAK,CAACoB,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMJ,YAAY,GAAIpB,EAAE,IAAK;IAC3BR,iBAAiB,CAAED,cAAc,IAC/BA,cAAc,CAACkC,QAAQ,CAACzB,EAAE,CAAC,GACvBT,cAAc,CAAC0B,MAAM,CAAEnB,KAAK,IAAKA,KAAK,KAAKE,EAAE,CAAC,GAC9C,CAAC,GAAGT,cAAc,EAAES,EAAE,CAC5B,CAAC;EACH,CAAC;EAED,MAAM0B,aAAa,GAAGA,CAACC,GAAG,EAAE3B,EAAE,KAAK;IACjC,IAAI,CAACF,KAAK,CAAC,GAAGH,MAAM,CAACC,MAAM,CAACP,MAAM,CAAC,CAAC4B,MAAM,CACxC,CAAC;MAAEjB,EAAE,EAAEkB;IAAQ,CAAC,KAAKA,OAAO,KAAKlB,EACnC,CAAC;IACD,IAAI4B,KAAK,GAAGC,MAAM,CAACF,GAAG,CAAC;IACvB7B,KAAK,CAACM,KAAK,CAACG,MAAM,GAAGqB,KAAK,GAAG,EAAE;IAE/B,IAAIA,KAAK,GAAG,CAAC,IAAI9B,KAAK,CAACM,KAAK,CAACkB,MAAM,EAAE;MACnCD,WAAW,CAACrB,EAAE,CAAC;IACjB;IAEA,IAAI4B,KAAK,KAAK,CAAC,IAAI,CAAC9B,KAAK,CAACM,KAAK,CAACkB,MAAM,EAAE;MACtCD,WAAW,CAACrB,EAAE,CAAC;IACjB;IAEAV,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA;IAAA+C,QAAA,gBACE/C,OAAA,CAACJ,IAAI;MACHqB,EAAE,EAAC,QAAQ;MACX+B,SAAS,EAAC,MAAM;MAChBC,IAAI,EAAC,wCAAwC;MAC7CC,MAAM,EAAE,EAAG;MACXC,OAAO,EAAEA,CAAA,KAAM9C,aAAa,CAAC,CAACD,UAAU;IAAE;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFvD,OAAA;MACEiB,EAAE,EAAC,iBAAiB;MACpBuC,KAAK,EAAE;QAAEC,UAAU,EAAErD,UAAU,GAAG,SAAS,GAAG;MAAS,CAAE;MAAA2C,QAAA,gBAEzD/C,OAAA,CAACJ,IAAI;QACHqB,EAAE,EAAC,MAAM;QACT+B,SAAS,EAAC,aAAa;QACvBC,IAAI,EAAC,oBAAoB;QACzBC,MAAM,EAAE,EAAG;QACXC,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAAC;MAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,EACD3C,MAAM,CAACC,MAAM,CAACP,MAAM,CAAC,CAACoD,GAAG,CAAE3C,KAAK,iBAC/Bf,OAAA,CAACH,WAAW;QAEVkB,KAAK,EAAEA,KAAM;QACbuB,WAAW,EAAEA,WAAY;QACzBK,aAAa,EAAEA,aAAc;QAC7BjC,OAAO,EAAEA;MAAQ,GAJZK,KAAK,CAACE,EAAE;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpD,EAAA,CAvHIF,WAAW;AAAA0D,EAAA,GAAX1D,WAAW;AAyHjB,eAAeA,WAAW;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}