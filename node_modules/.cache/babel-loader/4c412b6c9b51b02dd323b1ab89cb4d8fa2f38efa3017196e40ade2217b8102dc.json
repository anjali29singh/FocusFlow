{"ast":null,"code":"var _jsxFileName = \"/home/anjali/projects/FocusFlow/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Timer from \"./components/Timer/Timer\";\nimport Meditation from \"./components/Meditation/Meditation\";\nimport SettingsMenu from \"./components/SettingsMenu/SettingsMenu\";\nimport Footer from \"./components/Footer/Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showSettings, setShowSettings] = useState(false);\n  const [showMeditation, setShowMeditation] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [skip, setSkip] = useState();\n  const [intervalCount, setIntervalCount] = useState(0);\n  const [sessionCount, setSessionCount] = useState(1);\n  const triggerReset = () => setReset(reset => !reset);\n  const triggerSkip = () => {\n    setSkip(true);\n  };\n  const openMeditation = () => {\n    let timer = document.querySelector(\"#timer\");\n    timer.style.position = timer.style.position === \"absolute\" ? \"relative\" : \"absolute\";\n    setShowMeditation(!showMeditation);\n  };\n  useEffect(() => {\n    if (intervalCount >= 5) {\n      setIntervalCount(1);\n      setSessionCount(sessionCount + 1);\n    }\n  }, [intervalCount]); // eslint-disable-line\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      openSettings: () => setShowSettings(!showSettings),\n      openMeditation: openMeditation,\n      hideIcons: showSettings,\n      isMeditation: showMeditation,\n      triggerReset: triggerReset,\n      intervalCount: intervalCount,\n      sessionCount: sessionCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), showSettings ? /*#__PURE__*/_jsxDEV(SettingsMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }, this) : null, showMeditation ? /*#__PURE__*/_jsxDEV(Meditation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }, this) : null, /*#__PURE__*/_jsxDEV(Timer, {\n      hidden: showSettings || showMeditation,\n      reset: reset,\n      setIntervalCount: setIntervalCount,\n      intervalCount: intervalCount,\n      skip: skip,\n      setSkip: setSkip,\n      openMeditation: openMeditation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      hidden: showSettings || showMeditation,\n      triggerSkip: triggerSkip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UIVUmM3DCk9mAVAIdvFiZdJh2mE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Timer","Meditation","SettingsMenu","Footer","jsxDEV","_jsxDEV","App","_s","showSettings","setShowSettings","showMeditation","setShowMeditation","reset","setReset","skip","setSkip","intervalCount","setIntervalCount","sessionCount","setSessionCount","triggerReset","triggerSkip","openMeditation","timer","document","querySelector","style","position","id","children","openSettings","hideIcons","isMeditation","fileName","_jsxFileName","lineNumber","columnNumber","hidden","_c","$RefreshReg$"],"sources":["/home/anjali/projects/FocusFlow/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Timer from \"./components/Timer/Timer\";\nimport Meditation from \"./components/Meditation/Meditation\";\nimport SettingsMenu from \"./components/SettingsMenu/SettingsMenu\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n  const [showSettings, setShowSettings] = useState(false);\n  const [showMeditation, setShowMeditation] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [skip, setSkip] = useState();\n  const [intervalCount, setIntervalCount] = useState(0);\n  const [sessionCount, setSessionCount] = useState(1);\n\n  const triggerReset = () => setReset((reset) => !reset);\n\n  const triggerSkip = () => {\n    setSkip(true);\n  };\n\n  const openMeditation = () => {\n    let timer = document.querySelector(\"#timer\");\n\n    timer.style.position =\n      timer.style.position === \"absolute\" ? \"relative\" : \"absolute\";\n\n    setShowMeditation(!showMeditation);\n  };\n\n  useEffect(() => {\n    if (intervalCount >= 5) {\n      setIntervalCount(1);\n      setSessionCount(sessionCount + 1);\n    }\n  }, [intervalCount]); // eslint-disable-line\n\n  return (\n    <div id=\"app\">\n      <Navbar\n        openSettings={() => setShowSettings(!showSettings)}\n        openMeditation={openMeditation}\n        hideIcons={showSettings}\n        isMeditation={showMeditation}\n        triggerReset={triggerReset}\n        intervalCount={intervalCount}\n        sessionCount={sessionCount}\n      />\n      {showSettings ? <SettingsMenu /> : null}\n      {showMeditation ? <Meditation /> : null}\n      <Timer\n        hidden={showSettings || showMeditation}\n        reset={reset}\n        setIntervalCount={setIntervalCount}\n        intervalCount={intervalCount}\n        skip={skip}\n        setSkip={setSkip}\n        openMeditation={openMeditation}\n      />\n      <Footer\n        hidden={showSettings || showMeditation}\n        triggerSkip={triggerSkip}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}